version: "3.8"
services:
  # ALBとcloudfrontの代替
  mock-lb:
    build: ./mock-lb
    container_name: rs-mock-lb
    image: rs-mock-lb
    depends_on:
      - web
    environment:
      TARGET_SERVER: web
      STATIC_BUCKET: https://hogehoge.com
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./logs/mock-lb:/var/log/nginx
  web:
    build: ./web
    container_name: rs-web
    image: rs-web
    depends_on:
      - app
    environment:
      BACK_END_HOST: app
    volumes:
      - ./logs/web:/var/log/nginx
  app:
    build: ./app
    container_name: rs-app
    image: rs-app
    depends_on:
      mock-redis:
        condition: service_started
      mock-db:
        condition: service_healthy
    environment:
      DB_HOST: mock-db
      DB_USER: root
      DB_PASSWORD: SamplePW
      DB_NAME: review_stock
#    ports:
#      - 8080:8080
    volumes:
      - ./back-src/build/libs/ROOT.war:/usr/local/tomcat/webapps/ROOT.war
      - ./logs/app:/usr/local/tomcat/logs
  mock-db:
    build: ./mock-db
    container_name: rs-mock-db
    image: rs-mock-db
    environment:
      MYSQL_ROOT_PASSWORD: SamplePW
      MYSQL_DATABASE: review_stock
#    ports:
#      - 3306:3306
    volumes:
      - ./mock-db/mysql_init:/docker-entrypoint-initdb.d
      - ./logs/mock-db:/var/log/mysql
    # dbの起動確認
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root -p$$MYSQL_ROOT_PASSWORD
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s
  mock-redis:
    build: ./mock-redis
    image: rs-mock-redis
    container_name: rs-mock-redis

#    ports:
#      - 6379:6379
9e37ac4f6ed51f4fa7977479e3748eb842cbdc1ccd6ae7c44eef9ae0ecff2ffe
b4c6fe39e17e5f1ee938b7643e84092d6702ca56341bed3ba7fa0446531f8e4aa3e7ac4a8fb0aa77dc623a76dcafc32839d6af778f28c21bcbc2d2b1a322a20a
$5$1234$qmoc3xaDXIs4DCzFESfSU2I4UPA/7D6Jh.M.1hEG1VA
